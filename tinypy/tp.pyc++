import "tp.gen.h"
import "tp_internal.gen.h"

tp_obj tp_None = {TP_NONE};

import "tpd_list.gen.cpp"
import "tpd_dict.gen.cpp"

import "tp_echo.gen.cpp"
import "tp_param.gen.cpp"

import "tp_gc.gen.cpp"
import "tp_hash.gen.cpp"
import "tp_list.gen.cpp"
import "tp_dict.gen.cpp"
import "tp_string.gen.cpp"

import "tp_meta.gen.cpp"
import "tp_frame.gen.cpp"
import "tp_data.gen.cpp"
import "tp_func.gen.cpp"
import "tp_repr.gen.cpp"
import "tpy_string.gen.cpp"
import "tpy_dict.gen.cpp"
import "tpy_list.gen.cpp"
import "tp_vm.gen.cpp"

/* FIXME: after string / dict gets a meta, register these methods
 * to the meta in tpy_builtin
 * and tp_ops above tpy **/
import "tp_ops.gen.cpp" 
import "tp_import.gen.cpp"
import "tp_interp.gen.cpp"

#ifdef TP_SANDBOX
import "interp/sandbox.cpp"
#endif


import "tpy_builtins.gen.cpp"
